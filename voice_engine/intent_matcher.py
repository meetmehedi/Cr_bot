def match_intent(query, data):
    query = query.lower()
    
    if "рж░рзБржЯрж┐ржи" in query:
        return "routine", get_routine(data)
    elif "рж╕рзНржпрж╛рж░" in query or "рж░рзБржо" in query:
        return "teacher", get_teacher_room(data)
    elif "ржЗржнрзЗржирзНржЯ" in query or "ржШрзЛрж╖ржгрж╛" in query:
        return "event", data.get("events", "ржХрзЛржирзЛ ржЗржнрзЗржирзНржЯ рждржерзНржп ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред")
    else:
        return "unknown", "ржЖржорж┐ ржирж┐рж╢рзНржЪрж┐ржд ржирж╛ ржЖржкржирж┐ ржХрзА ржЬрж╛ржирждрзЗ ржЪрж╛ржЪрзНржЫрзЗржиред ржЖржмрж╛рж░ ржмрж▓рзБржиред"

def get_routine(data):
    routine = data.get("routine", {})
    msg = "ЁЯУЕ ржХрзНрж▓рж╛рж╕ рж░рзБржЯрж┐ржи:\n"
    for day, classes in routine.items():
        msg += f"\nЁЯЧУя╕П {day}:\n"
        for c in classes:
            # Optional: Validate keys exist before accessing
            time = c.get('time', 'рж╕ржоржпрж╝ ржЬрж╛ржирж╛ ржирзЗржЗ')
            course = c.get('course', 'ржХрзЛрж░рзНрж╕ ржЬрж╛ржирж╛ ржирзЗржЗ')
            room = c.get('room', 'рж░рзБржо ржЬрж╛ржирж╛ ржирзЗржЗ')
            msg += f"  ЁЯХТ {time}: {course} ({room})\n"
    return msg.strip()

def get_teacher_room(data):
    teachers = data.get("teachers", {})
    msg = "ЁЯСитАНЁЯПл рж╕рзНржпрж╛рж░ржжрзЗрж░ рж░рзБржо ржиржорзНржмрж░:\n"
    for name, info in teachers.items():
        room = info.get('room', 'рж░рзБржо ржЬрж╛ржирж╛ ржирзЗржЗ')
        msg += f"  {name}: Room {room}\n"
    return msg.strip()
